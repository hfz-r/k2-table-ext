body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
    "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.container {
  display: block;
  max-width: 100%;
  border-color: #adae9c;
  border-style: solid;
  border-width: 1px;

  .tableWrap {
    display: block;
    max-width: 100%;
    overflow-x: scroll;
    overflow-y: hidden;
    border-bottom: 1px solid black;
  }

  table {
    width: 100%;
    border-spacing: 0;
    border: 1px solid black;

    tr {
      :last-child {
        td {
          border-bottom: 0;
        }
      }
      &:nth-child(odd) {
        &:not(.action-row) {
          td {
            background-color: #f5f5f5;
          }
        }
      }
    }

    th,
    td {
      margin: 0;
      padding: 0.5rem;
      border-bottom: 1px solid black;
      border-right: 1px solid black;

      /* The secret sauce */
      /* Each cell should grow equally */
      width: 1%;
      /* But "collapsed" cells should be as small as possible */
      &.collapse {
        width: 0.0000000001%;
      }

      :last-child {
        border-right: 0;
      }
    }
  }

  .pagination {
    padding: 0.5rem;
    text-align: center;

    & button {
      background-color: transparent;
      background-repeat: no-repeat;
      border: none;
      cursor: pointer;
      overflow: hidden;
      outline: none;
    }
  }
}

.column-wrapper {
  box-sizing: border-box;
  position: relative;
  display: flex;
  vertical-align: middle;
  flex-flow: column nowrap;

  & .column-header {
    justify-content: flex-start;
    text-align: start;
    cursor: pointer;
    user-select: none;
    -webkit-user-select: none;
    position: relative;
    display: inline-flex;
    vertical-align: middle;
    flex-flow: row;
    align-items: center;
    flex: 1;
    -ms-flex: 1 1 auto;
    white-space: nowrap;
  }

  & .header-content {
    padding: 8px;
    flex: 1;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  }
}

.header-menu {
  border-left: none;
  border-right: none;
  margin-right: 8px;
  padding: 1px;
  height: 100%;
  flex: none;
  margin-left: auto;
  display: flex;
  align-items: center;
  cursor: pointer;
  top: 0;
  right: 0;

  .sort-icon--desc,
  .sort-icon--asc {
    margin-top: 2px;
  }

  &--hover {
    position: absolute;
  }

  &--hover:not(.header-menu--visible) {
    opacity: 0;
    pointer-events: none;
  }
}

.column-header {
  &:hover {
    & .header-menu {
      opacity: 1;
      pointer-events: all;
    }
  }
}

.sort-icon--asc {
  margin-bottom: 4px;
  display: inline-block;
  vertical-align: middle;
}

.sort-icon-desc {
  display: inline-block;
  vertical-align: middle;
}

.sort-icon-wrapper {
  display: inline-flex;
  flex-direction: column;
  vertical-align: middle;

  .sort-icon {
    margin-left: 8px;
    margin-right: 8px;
    fill: #515964;

    &.sort-icon--active {
      fill: #9ba7b4;
    }
  }
}

.header-filter-wrapper {
  min-height: 41px;
  border: 0;
  // background: #313943;
  padding: 4px;
  border-top: 1px solid #4f575f;
  th:first-child & {
    border-top: none;
  }

  & .header-filter {
    min-height: 32px;
    max-height: 32px;
  }

  display: flex;
  flex-flow: row;
  align-items: stretch;
  > * {
    min-width: 0;
  }

  > *:first-child {
    flex: 1;
  }
}

.header-filter {
  flex: 1;
  align-self: center;

  &--bool {
    justify-content: center;
  }
}

.header-filter-settings {
  margin-left: 8px;
  margin-right: 4px;
  flex: none;
  cursor: pointer;
  display: flex;
  align-items: center;

  svg {
    pointer-events: none;
    transform: translateY(0);
    transition: transform 0.2s;
  }

  &:active {
    svg {
      transform: translateY(1px);
    }
  }

  .header-filter-settings-icon {
    fill: #495e85;
  }

  &:hover {
    .header-filter-settings-icon {
      fill: #495e85;
    }
  }
}

.filter-text-input {
  font-size: 14px;
  fill: #9ba7b4;
  border: 1px solid #464d56;
  border-radius: 1px;
  // background: #464d56;
  color: #9ba7b4;
  min-height: 32px;
  height: 32px;
  transition: all 0.2s;
  box-sizing: border-box;
  text-align: start;
  direction: ltr;
  display: inline-flex;
  border: 1px solid #c5c5c5;
  overflow: hidden;
  background: #fff;
  align-items: center;
}

.text-input__input {
  border: none;
  outline: none;
  background: none;
  width: 100%;
  height: 100%;
  padding: 0 5px 0 8px;
}

/* 
    react-contextmenu styling 
    https://github.com/vkbansal/react-contextmenu/blob/master/examples/react-contextmenu.css
  */
.react-contextmenu {
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 0.25rem;
  color: #373a3c;
  font-size: 16px;
  margin: 2px 0 0;
  min-width: 160px;
  outline: none;
  opacity: 0;
  padding: 5px 0;
  pointer-events: none;
  text-align: left;
  transition: opacity 250ms ease !important;
}
.react-contextmenu.react-contextmenu--visible {
  opacity: 1;
  pointer-events: auto;
  z-index: 9999;
}
.react-contextmenu-item {
  background: 0 0;
  border: 0;
  color: #373a3c;
  cursor: pointer;
  font-weight: 400;
  line-height: 1.5;
  padding: 3px 20px;
  text-align: inherit;
  white-space: nowrap;
}
.react-contextmenu-item.react-contextmenu-item--active {
  color: #fff;
  background-color: #20a0ff;
  border-color: #20a0ff;
  text-decoration: none;
}
.react-contextmenu-item.react-contextmenu-item--selected {
  color: #fff;
  background-color: #20a0ff;
  border-color: #20a0ff;
  text-decoration: none;
}
.react-contextmenu-item.react-contextmenu-item--disabled {
  background-color: transparent;
  border-color: rgba(0, 0, 0, 0.15);
  color: #878a8c;
  &:hover {
    background-color: transparent;
    border-color: rgba(0, 0, 0, 0.15);
    color: #878a8c;
  }
}
.react-contextmenu-item--divider {
  border-bottom: 1px solid rgba(0, 0, 0, 0.15);
  cursor: inherit;
  margin-bottom: 3px;
  padding: 2px 0;
  &:hover {
    background-color: transparent;
    border-color: rgba(0, 0, 0, 0.15);
  }
}
.react-contextmenu-item.react-contextmenu-submenu {
  padding: 0;
  > .react-contextmenu-item {
    &:after {
      content: "â–¶";
      display: inline-block;
      position: absolute;
      right: 7px;
    }
  }
}
.k2-table-ext-menu-group {
  &[data-tooltip] {
    &::before {
      content: attr(data-tooltip);
      position: absolute;
      opacity: 0;
      padding: 5px;
      color: #333;
      border-radius: 10px;
      box-shadow: 2px 2px 1px silver;
    }
    &:hover {
      &::before {
        opacity: 1;
        font-size: small;
        background: #fdfdd3;
        margin-top: -40px;
        margin-left: 10px;
      }
    }
  }
  & svg {
    &:hover {
      fill: grey;
    }
  }
}
